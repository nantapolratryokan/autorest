@using System.Linq
@using AutoRest.Core.Utilities
@using AutoRest.CSharp.LoadBalanced.Model
@using AutoRest.CSharp.LoadBalanced.Templates.Rest.Client
@inherits AutoRest.Core.Template<System.Tuple<CodeModelCs, string, MethodCs[]>>
@Header("// ")
@{
    var model = Model.Item1;
    var clientName = Model.Item2;
    var methods = Model.Item3;
}
@EmptyLine
@foreach (var usingString in model.Usings)
{
@:using @usingString;
}
@EmptyLine
namespace @Settings.Namespace
{
@EmptyLine
    @if (!string.IsNullOrWhiteSpace(model.Documentation))
    {
    @:/// <summary>
    @:@WrapComment("/// ", model.Documentation.EscapeXmlComment())
    @:/// </summary>
    }

    public partial class @clientName : ApiBase, I@{ @clientName }
    { 

        private readonly Dictionary<string, string> _defaultHeaders = new Dictionary<string, string> { { "Accept" , "application/json"}, { "Content-Type", "application/json" } };
@EmptyLine
        public @clientName (
	        string name, List<ServerSettings> settings, 
	        TimeSpan ? timeout = null, 
	        int retryCount = 1, 
	        JsonSerializerSettings serializationSettings = null, 
	        JsonSerializerSettings deserializationSettings = null) 
		: base(name, settings, timeout, retryCount, serializationSettings, deserializationSettings)
        {
        }

    @foreach (MethodCs method in methods.Where(m => m.Group.IsNullOrEmpty()))
    {
        @:@(Include(new MethodTemplate(), method))
        @EmptyLine
        @:
        }
    }
}
